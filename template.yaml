---
# Source: sa-final-project/charts/mysql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dev-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.4.1
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
  annotations:
automountServiceAccountToken: true
secrets:
  - name: dev-mysql
---
# Source: sa-final-project/charts/mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dev-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.4.1
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mysql-root-password: "dTMyaXV3ZXVpdXdla2o="
  mysql-password: "eDhlaUI1d0Q2Qg=="
---
# Source: sa-final-project/templates/jwt-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dev-jwt-secrets-1
data:
  JWT_PREFIX: NjI1NkIzRTVDRkMyQzk5Mw==
  JWT_SECRET: QEBUbDhRbkZZUzJXJkBLSmtCOWkzQyp0aHdIWCFtUFcxSjBORzJrWjVsNlNmNmo3JiE=
  JWT_ISSUER: ZWR1Lm1pdS5jczU5MA==
---
# Source: sa-final-project/templates/mysql-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dev-mysql-secrets-1
data:
  MYSQL_PASSWORD: dTMyaXV3ZXVpdXdla2o=
  MYSQL_USER: cm9vdA==
---
# Source: sa-final-project/charts/auth-svc/templates/auth-mysql-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-auth-mysql-config-1
data:
  MYSQL_DB_NAME: AuthDB
---
# Source: sa-final-project/charts/mysql/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.4.1
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    default_authentication_plugin=mysql_native_password
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mysql
    plugin_dir=/opt/bitnami/mysql/lib/plugin
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    datadir=/bitnami/mysql/data
    tmpdir=/opt/bitnami/mysql/tmp
    max_allowed_packet=16M
    bind-address=*
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    log-error=/opt/bitnami/mysql/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    slow_query_log=0
    slow_query_log_file=/opt/bitnami/mysql/logs/mysqld.log
    long_query_time=10.0
    
    [client]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mysql/lib/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
---
# Source: sa-final-project/templates/mysql-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-mysql-config-1
data:
  MYSQL_DB_HOST: dev-mysql:3306
  APP_PROFILE: prod
---
# Source: sa-final-project/charts/auth-svc/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: auth-svc-dev
  labels:
    helm.sh/chart: auth-svc-0.1.0
    app.kubernetes.io/name: auth-svc
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8088
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: auth-svc
    app.kubernetes.io/instance: dev
---
# Source: sa-final-project/charts/mysql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-mysql-headless
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.4.1
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
  selector:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: primary
---
# Source: sa-final-project/charts/mysql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.4.1
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: primary
---
# Source: sa-final-project/charts/auth-svc/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-svc-dev
  labels:
    helm.sh/chart: auth-svc-0.1.0
    app.kubernetes.io/name: auth-svc
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: auth-svc
      app.kubernetes.io/instance: dev
  template:
    metadata:
      labels:
        app.kubernetes.io/name: auth-svc
        app.kubernetes.io/instance: dev
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: auth-svc
          securityContext:
            {}
          image: "ghcr.io/rust42/sample-test-build:main"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8088
              protocol: TCP
          livenessProbe:
            httpGet:
              path:  /
              port: 8088
            initialDelaySeconds: 20
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path:  /
              port: 8088
            initialDelaySeconds: 20
            periodSeconds: 3
          envFrom:
            - secretRef:
                name: dev-jwt-secrets-1
            - secretRef:
                name: dev-mysql-secrets-1
            - configMapRef:
                name: dev-mysql-config-1
            - configMapRef:
                name: dev-auth-mysql-config-1
          resources:
            {}
---
# Source: sa-final-project/charts/mysql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dev-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.4.1
    app.kubernetes.io/instance: dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  podManagementPolicy: ""
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: dev
      app.kubernetes.io/component: primary
  serviceName: dev-mysql
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: 845b4c472d2503903cad9bb0d0cfd6d5d271595165bdb8b34e80f8ca236f6f1f
      labels:
        app.kubernetes.io/name: mysql
        helm.sh/chart: mysql-9.4.1
        app.kubernetes.io/instance: dev
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: dev-mysql

      affinity:
        podAffinity:

        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mysql
                    app.kubernetes.io/instance: dev
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:

      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: mysql
          image: docker.io/bitnami/mysql:8.0.31-debian-11-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dev-mysql
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              value: "my_database"
          envFrom:
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          startupProbe:
            failureThreshold: 10
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: config
              mountPath: /opt/bitnami/mysql/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: dev-mysql
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: mysql
          app.kubernetes.io/instance: dev
          app.kubernetes.io/component: primary
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: sa-final-project/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sa-final-project-dev
  labels:
    helm.sh/chart: sa-final-project-0.1.0
    app.kubernetes.io/name: sa-final-project
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host:
      http:
        paths:
          - backend:
              service:
                name: auth-svc-dev
                port:
                  number: 80
            path: /api/auth
            pathType: Prefix
